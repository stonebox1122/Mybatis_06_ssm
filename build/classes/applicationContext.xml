<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- Spring希望管理所有的业务逻辑 -->
	<context:component-scan base-package="com.stone.mybatis">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- 引入数据库的配置文件 -->
	<context:property-placeholder location="classpath:db.properties"/>
	
	<!-- Spring用来控制业务逻辑，数据源，事物控制，aop -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${mysql.jdbcUrl}"></property>
		<property name="driverClass" value="${mysql.driverClass}"></property>
		<property name="user" value="${mysql.username}"></property>
		<property name="password" value="${mysql.password}"></property>
	</bean>
	
	<!-- Spring事物管理 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 开启基于注解的事物 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- 
		整合Mybatis 
		目的：
			1、Spring管理所有组件，mapper的实现类
			2、Spring用来管理事物
	-->
	<!-- 创建出sqlSessionFactory对象 -->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!-- configLocation指定全局配置文件的位置 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<!-- mapperLocations指定mapper文件的位置 -->
		<property name="mapperLocations" value="classpath:mybatis/mapper/*.xml"></property>
	</bean>
	
	<!-- 
		扫描所有的mapper接口的实现，让这些mapper能够自动注入 
		base-package指定mapper接口的包名
	-->
	<mybatis-spring:scan base-package="com.stone.mybatis.dao"/>

</beans>
